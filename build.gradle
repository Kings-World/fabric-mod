import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id "java"
  id "fabric-loom" version "0.12-SNAPSHOT"
  id "com.github.johnrengelman.shadow" version "7.1.2"
  id "com.github.breadmoirai.github-release" version "2.4.1"
  id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = archives_base_name
version = mod_version
group = maven_group

repositories {
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots"
  }
}

dependencies {
  minecraft "com.mojang:minecraft:$minecraft_version"
  mappings "net.fabricmc:yarn:$yarn_mappings:v2"
  modImplementation "net.fabricmc:fabric-loader:$loader_version"

  // Fabric API. This is technically optional, but you probably want it anyway.
  modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
  modImplementation "me.lucko:fabric-permissions-api:$perms_version"

  implementation "org.spongepowered:configurate-yaml:$configurate_version"
  implementation "club.minnced:discord-webhooks:$webhooks_version"
  implementation("net.dv8tion:JDA:$jda_version") {
    exclude module: "opus-java"
  }

  shadow "org.spongepowered:configurate-yaml:$configurate_version"
  shadow "club.minnced:discord-webhooks:$webhooks_version"
  shadow("net.dv8tion:JDA:$jda_version") {
    exclude module: "opus-java"
  }
}

processResources {
  inputs.property "version", project.version
  filter(ReplaceTokens, beginToken: "\${", endToken: "}", tokens: [
    version: project.version
  ])

  filesMatching("fabric.mod.json") {
    expand "version": project.version
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.encoding = "UTF-8"
  it.options.release = 17
}

java {
  // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
  // if it is present.
  // If you remove this line, sources will not be generated.
  withSourcesJar()
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.archivesBaseName}"}
  }
}

githubRelease {
  token = System.getenv("GITHUB_TOKEN").toString()
  owner = System.getenv("GITHUB_OWNER").toString()
  repo = System.getenv("GITHUB_REPO").toString()
  targetCommitish = System.getenv("GITHUB_REF_NAME").toString()
  body = file(".github/changelog.md").text
  releaseAssets = remapJar.archiveFile.get()
  releaseName = "[$minecraft_version] $mod_name $mod_version"
  tagName = mod_version
}

tasks.githubRelease.configure {
  group = "publishing"
  onlyIf { System.getenv("GITHUB_TOKEN") }
  dependsOn(build)
}

modrinth {
  projectId = modrinth_id
  versionNumber = version
  versionType = release_type
  versionName = "[$minecraft_version] $mod_name $mod_version"
  uploadFile = remapJar
  gameVersions = [minecraft_version]
  loaders = ["fabric"]
  changelog = file(".github/changelog.md").text
  syncBodyFrom = file("README.md").text
  dependencies {
    required.project "P7dR8mSH" // Fabric API
    // required.version "Zp275COe" // Fabric API 0.57.0+1.19
    optional.project "Vebnzrzj" // LuckPerms
  }
}

tasks.modrinth.configure {
  group = "publishing"
  onlyIf { System.getenv("MODRINTH_TOKEN") }
  dependsOn(build, modrinthSyncBody)
}

// credits to https://github.com/axieum/minecord/blob/main/minecord-api/build.gradle
// i have added minimize() to keep the jar as small as it can be
shadowJar {
  minimize()
  configurations = [project.configurations.shadow]
}

// credits to https://github.com/axieum/minecord/blob/main/minecord-api/build.gradle
remapJar {
  dependsOn tasks.shadowJar
  inputFile.set(tasks.shadowJar.archiveFile)
}
